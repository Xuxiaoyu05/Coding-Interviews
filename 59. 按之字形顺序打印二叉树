# ——————题目描述——————：
# 请实现一个函数按照之字形打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右至左的顺序打印，第三行按照从左到右的顺序打印，其他行以此类推。


# ——————解题思路——————：
#修改层次遍历代码，将层次遍历结果用二维列表存储起来。


# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    def Print(self, pRoot):
        # write code here
        # 修改层次遍历
        if not pRoot:
            return []
        
        res = []
        queue = [pRoot]
        flag = True  # 标识是正序输出还是逆序输出
        while queue:
            childs = []
            vals = []
            for node in queue:
                vals.append(node.val)
                if node.left:
                    childs.append(node.left)
                if node.right:
                    childs.append(node.right)
                    
            if flag:
                res.append(vals)
            else:
                res.append(vals[::-1])
            
            flag = not flag
            queue = childs
            
        return res
