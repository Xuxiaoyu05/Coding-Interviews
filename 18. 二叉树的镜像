# ——————题目描述——————：
# 操作给定的二叉树，将其变换为源二叉树的镜像。
# 输入描述:
# 二叉树的镜像定义：源二叉树 
#    	    8
#    	   /  \
#    	  6   10
#    	 / \  / \
#    	5  7 9 11
#    	镜像二叉树
#    	    8
#    	   /  \
#    	  10   6
#    	 / \  / \
#    	11 9 7  5


# ——————解题思路——————：
# 递归解法：若根不为空，则先交换其左右子树，然后分别左右子树执行递归交换操作。

# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    # 返回镜像树的根节点
    def Mirror(self, root):
        # write code here
        if not root:
            return None
        
        root.left, root.right = root.right, root.left
        
        self.Mirror(root.left)
        self.Mirror(root.right)
        
        return root
