# ——————题目描述——————：
# 一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。

# ——————解题思路——————：
# 位运算，利用两个相同的数字异或结果为零的特性。
# 步骤：（1）将数组中的所有元素进行异或，得到两个只出现一次的数字 a 和 b 的异或结果 Xor;
#       （2）Xor 二进制中为 1 的数字即为 a 和 b 不同的位，a 和 b 在这些位中一个是1，一个是0。# 不失一般性，就找Xor中第一个为1的位，将这个位数记为k。
#       （3）令数组中所有第k位为1的数异或，可得到其中的一个数 a（第 k 位为 1 的数）
#       （4）将 a 与 Xor 异或，可得 b


# -*- coding:utf-8 -*-
class Solution:
    # 返回[a,b] 其中ab是出现一次的两个数字
    def FindNumsAppearOnce(self, array):
        # write code here
        if len(array) == 0 or len(array) == 1:
            return
        
        # 对数组中的所有元素进行异或，得到两个只出现一次数字的异或结果。（相同元素异或得0）
        res = 0
        for i in array:
            res ^= i
            
        # res 二进制中为 1 的数字即为 a 和 b 不同的位，a 和 b 在这些位中一个是1，一个是0。
        # 不失一般性，我们就找Xor中第一个为1的位，将这个位数记为k.
        k = 0
        temp = res
        
        while temp:
            k += 1
            temp = temp >> 1
        
        helper = 2 ** (k-1)
        
        a, b = 0, 0
        
        # 令数组中所有第k位为1的数异或，可得到其中的一个数
        for j in array:
            # 寻找数组中第 k 位为 1 的元素
            if j & helper == helper:
                a ^= j
        
        b = res ^ a
        
        return a, b
