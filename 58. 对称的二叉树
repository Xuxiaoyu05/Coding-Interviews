# ——————题目描述——————：
# 请实现一个函数，用来判断一颗二叉树是不是对称的。注意，如果一个二叉树同此二叉树的镜像是同样的，定义其为对称的。


# ——————解题思路——————：
# 递归求解：判断当前结点的左右子结点是否对称。

# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    def isSymmetrical(self, pRoot):
        # write code here
        if not pRoot:
            return True
        
        return self.isSameTree(pRoot.left, pRoot.right)
    
    def isSameTree(self, root1, root2):
        if root1 == root2 == None:
            return True
        
        if root1 == None or root2 == None or root1.val != root2.val:
            return False
        
        return self.isSameTree(root1.left, root2.right) and self.isSameTree(root1.right, root2.left)
