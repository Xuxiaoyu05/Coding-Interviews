# ——————题目描述——————：
# 给定一棵二叉搜索树，请找出其中的第k小的结点。例如，（5，3，7，2，4，6，8）中，按结点数值大小顺序第三小结点的值为4。


# ——————解题思路——————：
# 中序遍历。


# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    # 返回对应节点TreeNode
    def KthNode(self, pRoot, k):
        # write code here
        # 二叉搜索树的中序遍历结果是排序数组（递增序）
        if not pRoot or k <= 0:
            return
        
        Order_Tree = self.InOrder_Tree(pRoot)
        if k > len(Order_Tree):
            return None
        else:
            return Order_Tree[k-1]
        
    
    def InOrder_Tree(self, root):
        if not root:
            return []
        
        res = []
        stack = []
        cur = root
        
        while cur or stack:
            if cur:
                stack.append(cur)
                cur = cur.left
            else:
                cur = stack.pop()
                res.append(cur)  # 此处应该是 cur.val，牛客网上有 bug
                cur = cur.right
        
        return res
