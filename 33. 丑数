# ——————题目描述——————：
# 把只包含质因子2、3和5的数称作丑数（Ugly Number）。
# 例如6、8都是丑数，但14不是，因为它包含质因子7。 习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第N个丑数。


# ——————解题思路——————：
# 方法一：从1开始逐个判断每个整数是否为丑数，直到找到第N个丑数为止。根据丑数定义，其只能被2， 3和5整数，所以一直除，判断最后是否为1；
# 方法二：维护三个指针，分别指向丑数列表待乘2，3和5的数字位置，每次添加每个指针处数字乘以对应2，3和5的最小值，并随后判断哪个指针需向前移动一位。


# -*- coding:utf-8 -*-
class Solution:
    def GetUglyNumber_Solution(self, index):
        # write code here
        
        if index <= 0:
            return 0
        
        index2, index3, index5 = 0, 0, 0
        
        ugly = [1]
        
        while index > 1:
            min_val = min(ugly[index2] * 2, ugly[index3] * 3, ugly[index5] * 5)
            ugly.append(min_val)
            
            # 此处要注意，需要判断三个 if，而不是 if...else，否则 ugly 中会出现重复的数字
            if min_val == ugly[index2] * 2:
                index2 += 1
            if min_val == ugly[index3] * 3:
                index3 += 1
            if min_val == ugly[index5] * 5:
                index5 += 1
            
            index -= 1
        
        return ugly[-1]
